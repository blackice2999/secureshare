<?php

/**
 * Implementation of hook_block_info()
 * provides a Socialshare privacy as block
 *
 * @return array
 */
function secureshare_blocks_block_info() {
  $blocks = array();

  $blocks['default'] = array(
    'info' => t('Socialshare privacy'),
  );

  return $blocks;
}

/**
 * Implementation of hook_block_configure()
 * provides block settings for Socialshare privacy.
 *
 * @param string $delta
 * @return array
 */
function secureshare_blocks_block_configure($delta = '') {
  $form = array();
  if ($delta === 'default') {
    // include the admin forms from core module and proceed if success
    if (module_load_include('inc', 'secureshare', 'secureshare.admin')) {
      // merge in admin form
      $form += secureshare_settings_form();

      //@TODO: we need to merge in the default values
    };
  }
  return $form;
}

/**
 * Implementation of hook_block_save()
 *
 * @param string $delta
 * @param array $edit
 */
function secureshare_blocks_block_save($delta = '', $edit = array()) {
  if ($delta === 'default') {
    $settings = $edit['secureshare_settings'];
    // remove empty values
    $settings = _secureshare_blocks_sanitize_values($settings);
    variable_set('secureshare_blocks_' . $delta, $settings);
  }
}

/**
 * Implementation of hook_block_view
 *
 * @param string $delta
 * @return array
 */
function secureshare_blocks_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'default':
      $block['subject'] = t('Secureshare block');
      $block['content'] = secureshare_blocks_block_default();
    break;
  }

  return $block;
}

/**
 * Implementation of hook_block_view > delta > default
 *
 * @return array
 *  returns the block elements as render elements
 */
function secureshare_blocks_block_default() {
  $output = array();

  $block_settings = variable_get('secureshare_blocks_default', array());

  $output['secureshare'] = array(
    '#type' => 'secureshare',
    '#secureshare_config' => $block_settings,
  );

  return $output;
}

/**
 * Helper function iterates over the settings array and removes empty values.
 * because we dont need to save any empty keys
 *
 * @param array $settings
 */
function _secureshare_blocks_sanitize_values(&$settings = array()) {
  foreach($settings as $setting_key => $value) {
    if (is_array($value)) {
      _secureshare_blocks_sanitize_values($settings[$setting_key]);
    }
    elseif (empty($value)) {
      unset($settings[$setting_key]);
    }
  }
 return $settings;
}