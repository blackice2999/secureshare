<?php

/**
 * @file
 * Adds Sharebuttons from Facebook, Google+ and Twitter to each selected node type and make it active after confirm from user.
 */


/**
 * Implements of hook_init
 */
function secureshare_init() {
  // add own javascript wrapper
  _secureshare_add_js();
}

function _secureshare_add_config() {
  $secursharelib = libraries_get_path('socialshareprivacy');
  $secureshareconfig = array();
  $services = array('facebook', 'twitter', 'gplus');
  $secureshareconfig['txt_help'] = t(variable_get('secureshare_infotxt','Help Text here'));
  $secureshareconfig['info_link'] = variable_get('secureshare_infourl', 'http://www.heise.de/ct/artikel/2-Klicks-fuer-mehr-Datenschutz-1333879.html');
  $secureshareconfig['settings_perma'] = t('Dauerhaft aktivieren und DatenÃ¼bertragung zustimmen:');
  $secureshareconfig['services'] = array(
    'facebook' => array(
      'status' => variable_get('fb_status', 'on'),
      'dummy_img' => base_path() . $secursharelib . '/socialshareprivacy/images/dummy_facebook.png',
      'txt_info' => t(variable_get('fb_txt_info','FB INFO TEXT HERE')),
      'txt_fb_off' => t('Off'),
      'txt_fb_on' => t('On'),
      'perma_option' => 'on',
      'display_name' => t('Facebook'),
      'referrer_track' => '',
      'language' => 'de_DE',
      'action' => t('recommend'),
    ),
    'twitter' => array(
      'status' => variable_get('twitter_status', 'on'),
      'dummy_img' => base_path() . $secursharelib . '/socialshareprivacy/images/dummy_twitter.png',
      'txt_info' => t(variable_get('twitter_txt_info','Twitter INFO TEXT HERE')),
      'txt_twitter_off' => t('Off'),
      'txt_twitter_on' => t('On'),
      'perma_option' => 'on',
      'display_name' => t('Twitter'),
      'referrer_track' => '',
      'language' => 'en',
      'tweet_text' => t('tweet text'),
    ),
    'gplus' => array(
      'status' => variable_get('gplus_status', 'on'),
      'dummy_img' => base_path() . $secursharelib . '/socialshareprivacy/images/dummy_gplus.png',
      'txt_info' => t(variable_get('gplus_txt_info', 'GPLUS INFO TEXT HERE')),
      'txt_twitter_off' => t('Off'),
      'txt_twitter_on' => t('On'),
      'perma_option' => 'on',
      'display_name' => t('GPLUS'),
      'referrer_track' => '',
      'language' => 'en',
    ),
  );

  drupal_add_js(array('secureshare' => $secureshareconfig), 'setting');


}

function _secureshare_add_js() {
  static $jsadded;

  // path to lib
  $securesharepath = libraries_get_path('socialshareprivacy');
  $securesharelib = $securesharepath . '/jquery.socialshareprivacy.js';

  if (!$jsadded) {
    _secureshare_add_config();
    drupal_add_css($securesharepath . '/socialshareprivacy/socialshareprivacy.css');
    drupal_add_js(drupal_get_path('module', 'secureshare') . '/secureshare.js');
    drupal_add_js($securesharelib);
    $jsadded = TRUE;
  }
}

/**
 * Implements of hook_menu().
 */
function secureshare_menu() {
  $items['admin/settings/secureshare'] = array(
    'title' => 'Secure share',
    'description' => 'Configure general Settings',
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('administer secureshare'),
    'position' => 'right',
    'weight' => -20,
    'type' => MENU_NORMAL_ITEM,
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );
  $items['admin/settings/secureshare/general'] = array(
    'title' => 'General',
    'description' => 'Configure general settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('secureshare_admin_settings'),
    'access arguments' => array('administer secureshare'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'secureshare.admin.inc',
    'weight' => 0,
  );

  return $items;
}


/**
 * Implements of hook_perm
 * ().
 */
function secureshare_perm() {
  return array('users may administer Secure button', 'users may administer Secure button block', 'users may access Secure button');
}


/**
 * Implementation of hook_nodeapi().
 */
function secureshare_nodeapi(&$node, $op, $teaser, $page) {
  global $user, $base_url, $language;
  $likebutton = '<div class="socialshareprivacy"></div>';
  $likebutton_weight = variable_get('secureshare_weight', '-50');
  switch ($op) {
    case 'view':
      $secureshare_showonteasers = variable_get('secureshare_showonteasers', 0);
      // Set which node types users can "like".
      $types_to_like = variable_get('secureshare_node_types', array('page'));
      // Do not add the like button to any of the unchecked node types.
      if (!in_array($node->type, $types_to_like, TRUE)) {
        break;
      }
      if ($secureshare_showonteasers == 0) {
        if (!$page) {
          break;
        }
      }
      // Check permissions
      if (user_access('users may access Secure button')) {
        // If set, keep the button out of teasers:
        if ($secureshare_showonteasers == 0) {
          if ($teaser) {
            break;
          }
        }
        $node->content['secureshare_button'] = array(
          '#value' => $likebutton,
          '#weight' => $likebutton_weight,
        );
        break;
      }
  }
}

