<?php
// $Id$

/**
 * @file
 * Adds Sharebuttons from Facebook, Google+ and Twitter to each selected node type and make it active after confirm from user.
 */

/**
 * Implements of hook_init
 */
function secureshare_init() {
  global $conf;
    drupal_add_js(drupal_get_path('module', 'secureshare') .'/js/jquery.socialshareprivacy.js');
}



/**
 * Implements of hook_menu().
 */
function secureshare_menu() {
	$items['admin/config/secureshare'] = array(
    'title' => 'Secure share',
    'description' => 'Configure general Settings',
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('administer secureshare'),
    'position' => 'right',
    'weight' => -20,
    'type' => MENU_NORMAL_ITEM,
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );
  $items['admin/config/secureshare/general'] = array(
    'title' => 'General',
    'description' => 'Configure general settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('secureshare_admin_settings'),
    'access arguments' => array('administer secureshare'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'secureshare.admin.inc',
    'weight' => 0,
  );
	$items['admin/config/secureshare/facebook'] = array(
    'title' => 'Facebook',
    'description' => 'Configure facebook settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('secureshare_admin_settings'),
    'access arguments' => array('administer secureshare'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'facebook.admin.inc',
    'weight' => 1,
  );
	$items['admin/config/secureshare/googleplus'] = array(
    'title' => 'Google+',
    'description' => 'Configure Google+ settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('secureshare_admin_settings'),
    'access arguments' => array('administer secureshare'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'googleplus.admin.inc',
    'weight' => 2,
  );
	$items['admin/config/secureshare/twitter'] = array(
    'title' => 'Twitter',
    'description' => 'Configure twitter settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('secureshare_admin_settings'),
    'access arguments' => array('administer secureshare'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'twitter.admin.inc',
    'weight' => 3,
  );
  return $items;
}


/**
 * Implements of hook_permission().
 */
function secureshare_permission() {
  return array(
    'administer secureshare' => array(
      'title' => t('Administer secure Sharebuttons'),
      'description' => t('Perform administration tasks for secure Sharebuttons')
    ),
    'administer secureshare block' => array(
      'title' => t('Administer secure Sharebuttons block'),
      'description' => t('Perform administration tasks for secure Sharebuttons')
    ),
    'access secureshare' => array(
      'title' => t('Access secure Sharebuttons'),
    ),
  );
}

/**
 * Implements of hook_node_view().
 */
function secureshare_node_view($node, $view_mode) {
  global $user, $base_url;
  $types = variable_get('secureshare_node_types', array());
  $showonteasers = variable_get('secureshare_showonteasers', 0);
  $full = ($view_mode == 'full') ? TRUE : FALSE;
  $show = ( ! empty($types[$node->type]) && user_access('access secureshare'));
  // Thanks to corbacho for supplying the code for the $webpage_to_like variable...
  // (It was apparently throwing errors/notices the way I had it set up.)
  $webpage_to_like = url("node/$node->nid", array('absolute' => TRUE));
  $likebutton_weight = variable_get('secureshare_weight', '0');
  $conf = array(
    'layout' => variable_get('secureshare_layout', 'standard'),
    'action' => variable_get('secureshare_action', 'like'),
    'color_scheme' => variable_get('secureshare_color_scheme', 'light'),
    'show_faces' => variable_get('secureshare_show_faces', 'true'),
    'font' => variable_get('secureshare_font', 'arial'),
    'height' => variable_get('secureshare_iframe_height', '80'),
    'width' => variable_get('secureshare_iframe_width', '450'),
    'send' => variable_get('secureshare_send', 'true'),
    'other_css' => variable_get('secureshare_iframe_css', ''),
    'language' => variable_get('secureshare_language', 'en_US'),
  );
  if ($show) {
    if ($showonteasers == 0) {
      if ($view_mode == 'teaser') {
        $node->content['secureshare_field'] = NULL;
      }
      if ($view_mode == 'full') {
        $node->content['secureshare_field'] = array(
          '#markup' => _secureshare_field($webpage_to_like, $conf),
          '#weight' => $likebutton_weight,
        );
      }
    }
    elseif ($showonteasers == 1) {
      if ($view_mode == 'teaser' || $view_mode == 'full') {
        $node->content['secureshare_field'] = array(
         '#markup' => _secureshare_field($webpage_to_like, $conf),
        '#weight' => $likebutton_weight,
        );
      }
    }
  }
}

function _secureshare_field($webpage_to_like, $conf) {
  $webpage_to_like = urlencode($webpage_to_like);
  $width = $conf['width'];
  $height = $conf['height'];
  $layout = $conf['layout'];
  $action = $conf['action'];
  $colorscheme = $conf['color_scheme'];
  $show_faces = $conf['show_faces'];
  $font = $conf['font'];
//  $send = $conf['send'];
  $other_css = $conf['other_css'];
  $language = $conf['language'];
  $params = "href={$webpage_to_like}&layout={$layout}&show_faces={$show_faces}&width={$width}px&font={$font}&height={$height}px&action={$action}&colorscheme={$colorscheme}&locale={$language}";
  $src = htmlentities($params);
  $output = '<div class="secureshare"><iframe src="https://www.facebook.com/plugins/like.php?' . $src . '" scrolling="no" frameborder="0" style="border: none; overflow: hidden; width: ' . $width . 'px; height: ' . $height . 'px;' . $other_css . '" allowTransparency="true"></iframe></div>';
  return $output;
}

