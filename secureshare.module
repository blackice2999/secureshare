<?php

/**
 * @file
 * Adds Sharebuttons from Facebook, Google+ and Twitter to each selected node type and make it active after confirm from user.
 */


/**
 * Implements of hook_init
 */
function secureshare_init() {
  // add own javascript wrapper
  _secureshare_add_js();
}

function _secureshare_add_config() {
  $secursharelib = libraries_get_path('socialshareprivacy');
  $secureshareconfig = array();
  $secureshareconfig['txt_help'] = t(variable_get('secureshare_infotxt', 'Please set text in administration')); // set hovertext for infbutton, default set in secureshare.admin.inc
  $secureshareconfig['info_link'] = variable_get('secureshare_infourl', 'Please set URL in administration'); //set link to more informations, default set in secureshare.admin.inc
  $secureshareconfig['settings_perma'] = t('Dauerhaft aktivieren und DatenÃ¼bertragung zustimmen:');
  $secureshareconfig['services'] = array(
    'facebook' => array(
      'status' => variable_get('fb_status', 'on'),
      'dummy_img' => base_path() . $secursharelib . '/socialshareprivacy/images/dummy_facebook.png',
      'txt_info' => t(variable_get('fb_txt_info', 'FB INFO TEXT HERE')), // default set in secureshare.admin.inc
      'txt_fb_off' => t('Off'),
      'txt_fb_on' => t('On'),
      'perma_option' => 'on',
      'display_name' => t('Facebook'),
      'referrer_track' => '',
      'language' => 'de_DE',
      'action' => t('recommend'),
    ),
    'twitter' => array(
      'status' => variable_get('twitter_status', 'on'),
      'dummy_img' => base_path() . $secursharelib . '/socialshareprivacy/images/dummy_twitter.png',
      'txt_info' => t(variable_get('twitter_txt_info', 'Twitter INFO TEXT HERE')), // default set in secureshare.admin.inc
      'txt_twitter_off' => t('Off'),
      'txt_twitter_on' => t('On'),
      'perma_option' => 'on',
      'display_name' => t('Twitter'),
      'referrer_track' => '',
      'language' => 'en',
      'tweet_text' => t('tweet text'),
    ),
    'gplus' => array(
      'status' => variable_get('gplus_status', 'on'),
      'dummy_img' => base_path() . $secursharelib . '/socialshareprivacy/images/dummy_gplus.png',
      'txt_info' => t(variable_get('gplus_txt_info', 'GPLUS INFO TEXT HERE')), // default set in secureshare.admin.inc
      'txt_twitter_off' => t('Off'),
      'txt_twitter_on' => t('On'),
      'perma_option' => 'on',
      'display_name' => t('GPLUS'),
      'referrer_track' => '',
      'language' => 'en',
    ),
  );

  drupal_add_js(array('secureshare' => $secureshareconfig), 'setting');


}

function _secureshare_add_js() {
  static $jsadded;

  // path to lib
  $securesharepath = libraries_get_path('socialshareprivacy');
  $securesharelib = $securesharepath . '/jquery.socialshareprivacy.js';

  if (!$jsadded) {
    _secureshare_add_config();
    drupal_add_css($securesharepath . '/socialshareprivacy/socialshareprivacy.css');
    drupal_add_js(drupal_get_path('module', 'secureshare') . '/secureshare.js');
    drupal_add_js($securesharelib);
    $jsadded = TRUE;
  }
}

/**
 * Implements of hook_menu().
 */
function secureshare_menu() {
	$items['admin/config/secureshare'] = array(
    'title' => 'Secure share',
    'description' => 'Configure general Settings',
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('administer secureshare'),
    'position' => 'right',
    'weight' => -20,
    'type' => MENU_NORMAL_ITEM,
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );
  $items['admin/config/secureshare/general'] = array(
    'title' => 'General',
    'description' => 'Configure general settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('secureshare_admin_settings'),
    'access arguments' => array('administer secureshare'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'secureshare.admin.inc',
    'weight' => 0,
  );
	
  return $items;
}


/**
 * Implements of hook_permission().
 */
function secureshare_permission() {
  return array(
    'administer secureshare' => array(
      'title' => t('Administer secure Sharebuttons'),
      'description' => t('Perform administration tasks for secure Sharebuttons')
    ),
    'administer secureshare block' => array(
      'title' => t('Administer secure Sharebuttons block'),
      'description' => t('Perform administration tasks for secure Sharebuttons')
    ),
    'access secureshare' => array(
      'title' => t('Access secure Sharebuttons'),
    ),
  );
}

/**
 * Implements of hook_node_view().
 */
function secureshare_node_view($node, $view_mode) {
  global $user, $base_url;
  $types = variable_get('secureshare_node_types', array());
  $showonteasers = variable_get('secureshare_showonteasers', 0);
  $show = ( ! empty($types[$node->type]) && user_access('access secureshare'));
  $webpage_to_like = url("node/$node->nid", array('absolute' => TRUE));

  if ($show) {
    if ($showonteasers == 0) {
      if ($view_mode == 'teaser') {
        $node->content['secureshare_field'] = NULL;
      }
      if ($view_mode == 'full') {
        $node->content['secureshare_field'] = array(
          '#markup' => _secureshare_field($webpage_to_like),
        );
      }
    }
    elseif ($showonteasers == 1) {
      if ($view_mode == 'teaser' || $view_mode == 'full') {
        $node->content['secureshare_field'] = array(
         '#markup' => _secureshare_field($webpage_to_like),
        );
      }
    }
  }
}

function _secureshare_field() {
  $output = '<div class="socialshareprivacy"></div>';
  return $output;
}

