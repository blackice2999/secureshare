<?php
// $Id$

/**
 * @file
 * Adds Sharebuttons from Facebook, Google+ and Twitter to each selected node type and make it active after confirm from user.
 */


/**
 * Implements of hook_init
 */
function secureshare_init() {
	drupal_add_css(drupal_get_path('module', 'secureshare') . '/css/secureshare.css');
	drupal_add_js(drupal_get_path('module', 'secureshare') . '/js/jquery.socialshareprivacy.js');
	drupal_add_js(array('secureshare' => array('module' => drupal_get_path('module', 'secureshare'))), 'setting');
	drupal_add_js(array('secureshareconf' => array(
		 'shover' => variable_get('secureshare_hovertext', 'Testtext'),
		 'appid' => variable_get('secureshare_appid', '234037923313454'),
	 )
								),
								'setting');
}


/**
 * Implements of hook_menu().
 */
function secureshare_menu() {
	$items['admin/settings/secureshare'] = array(
		'title' => 'Secure share',
		'description' => 'Configure general Settings',
		'page callback' => 'system_admin_menu_block_page',
		'access arguments' => array('administer secureshare'),
		'position' => 'right',
		'weight' => -20,
		'type' => MENU_NORMAL_ITEM,
		'file' => 'system.admin.inc',
		'file path' => drupal_get_path('module', 'system'),
	);
	$items['admin/settings/secureshare/general'] = array(
		'title' => 'General',
		'description' => 'Configure general settings',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('secureshare_admin_settings'),
		'access arguments' => array('administer secureshare'),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'secureshare.admin.inc',
		'weight' => 0,
	);

	return $items;
}


/**
 * Implements of hook_perm
 * ().
 */
function secureshare_perm() {
	return array('users may administer Secure button', 'users may administer Secure button block', 'users may access Secure button');
}


/**
 * Implementation of hook_nodeapi().
 */
function secureshare_nodeapi(&$node, $op, $teaser, $page) {
	global $user, $base_url, $language;
	$likebutton = '<div id="socialshareprivacy"></div>';
	$likebutton_weight = variable_get('secureshare_weight', '50');
	switch ($op) {
		case 'view':
			$secureshare_showonteasers = variable_get('secureshare_showonteasers', 0);
			// Set which node types users can "like".
			$types_to_like = variable_get('secureshare_node_types', array('page'));
			// Do not add the like button to any of the unchecked node types.
			if (!in_array($node->type, $types_to_like, TRUE)) {
				break;
			}
			if ($secureshare_showonteasers == 0) {
				if (!$page) {
					break;
				}
			}
			// Check permissions
			if (user_access('users may access Secure button')) {
				// If set, keep the button out of teasers:
				if ($secureshare_showonteasers == 0) {
					if ($teaser) {
						break;
					}
				}
				$node->content['secureshare_button'] = array(
					'#value' => $likebutton,
					'#weight' => $likebutton_weight,
				);
				break;
			}
	}
}

