<?php
// $Id$

/**
 * @file
 * Adds Sharebuttons from Facebook, Google+ and Twitter to each selected node type and make it active after confirm from user.
 */


/**
 * Implements of hook_init
 */
function secureshare_init() {


  drupal_add_js(drupal_get_path('module', 'secureshare') .'/js/jquery.socialshareprivacy.js');
	drupal_add_js(array('secureshare' => array('module' => drupal_get_path('module', 'secureshare'))), 'setting');
	drupal_add_js(array('secureshareconf' => array(
    'shover' => variable_get('secureshare_hovertext'),
		'appid' => variable_get('secureshare_appid'),
  )
	),
	'setting');
}



/**
 * Implements of hook_menu().
 */
function secureshare_menu() {
	$items['admin/config/secureshare'] = array(
    'title' => 'Secure share',
    'description' => 'Configure general Settings',
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('administer secureshare'),
    'position' => 'right',
    'weight' => -20,
    'type' => MENU_NORMAL_ITEM,
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );
  $items['admin/config/secureshare/general'] = array(
    'title' => 'General',
    'description' => 'Configure general settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('secureshare_admin_settings'),
    'access arguments' => array('administer secureshare'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'secureshare.admin.inc',
    'weight' => 0,
  );
	
  return $items;
}


/**
 * Implements of hook_permission().
 */
function secureshare_permission() {
  return array(
    'administer secureshare' => array(
      'title' => t('Administer secure Sharebuttons'),
      'description' => t('Perform administration tasks for secure Sharebuttons')
    ),
    'administer secureshare block' => array(
      'title' => t('Administer secure Sharebuttons block'),
      'description' => t('Perform administration tasks for secure Sharebuttons')
    ),
    'access secureshare' => array(
      'title' => t('Access secure Sharebuttons'),
    ),
  );
}

/**
 * Implements of hook_node_view().
 */
function secureshare_node_view($node, $view_mode) {
  global $user, $base_url;
  $types = variable_get('secureshare_node_types', array());
  $showonteasers = variable_get('secureshare_showonteasers', 0);
  $show = ( ! empty($types[$node->type]) && user_access('access secureshare'));
  $webpage_to_like = url("node/$node->nid", array('absolute' => TRUE));
  
  if ($show) {
    if ($showonteasers == 0) {
      if ($view_mode == 'teaser') {
        $node->content['secureshare_field'] = NULL;
      }
      if ($view_mode == 'full') {
        $node->content['secureshare_field'] = array(
          '#markup' => _secureshare_field($webpage_to_like),
        );
      }
    }
    elseif ($showonteasers == 1) {
      if ($view_mode == 'teaser' || $view_mode == 'full') {
        $node->content['secureshare_field'] = array(
         '#markup' => _secureshare_field($webpage_to_like),
        );
      }
    }
  }
}

function _secureshare_field() {
  $output = '<div id="socialshareprivacy"></div>';
  return $output;
}

